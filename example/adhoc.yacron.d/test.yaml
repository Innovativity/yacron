web:
  listen:
     - http://127.0.0.1:8080
     - unix:///tmp/yacron.sock

defaults:
  shell: /bin/bash

  concurrencyPolicy: Allow
  # Allow (default): allows concurrently running jobs
  # Forbid: forbids concurrent runs, skipping next run if previous hasnâ€™t finished yet
  # Replace: cancels currently running job and replaces it with a new one

  failsWhen:
    producesStdout: false
    producesStderr: true
    nonzeroReturn: true

  onPermanentFailure:
    report:
      sentry:
        dsn:
          value: http://xxx:yyy@sentry/40
        extra:
          foo: bar
          zbr: 123
        level: warning
      mail:
        from: example@foo.com
        to: example@bar.com
        smtpHost: 127.0.0.1
        smtpPort: 10025
        subject: Cron job '{{name}}' {% if success %}completed{% else %}failed{% endif %}
        body: |
         {{stderr}}

         (exit code: {{exit_code}})

  environment:
    - key: FOO
      value: foo
    - key: BAR
      value: bar

  statsd:
    host: localhost
    port: 8125
    prefix: my.cron.jobs.prefix.test01

jobs:

  - name: test-02
    command: |
      for x in $(seq 1 3); do
        echo "XXXXX $x XXXXX stderr" 1>&2
        dmesg 1>&2
        echo "XXXXX $x XXXXX stderr (end)" 1>&2

        echo "XXXXX $x XXXXX stdout"
        dmesg
        echo "XXXXX $x XXXXX stdout (end)"
        sleep 0.1
      done
      exit 1
    schedule: "@reboot"
    captureStderr: true
    captureStdout: true
    saveLimit: 10
    environment:
      - key: FOO
        value: xpto
      - key: ZBR
        value: blah

